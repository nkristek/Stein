<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="BundleLanguage" xml:space="preserve">
    <value>Bundle language:</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="Installing" xml:space="preserve">
    <value>Installing…</value>
  </data>
  <data name="InstallLog" xml:space="preserve">
    <value>Install log</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading…</value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Nothing" xml:space="preserve">
    <value>Nothing</value>
  </data>
  <data name="NoDialogExistsForDialogModel" xml:space="preserve">
    <value>No dialog found to display this DialogModel.</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>Open Folder</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="Preparing" xml:space="preserve">
    <value>Preparing…</value>
  </data>
  <data name="ProductCodeIsEmpty" xml:space="preserve">
    <value>The product code is empty. The operation could not be executed.</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="Reinstall" xml:space="preserve">
    <value>Reinstall</value>
  </data>
  <data name="Reinstalling" xml:space="preserve">
    <value>Reinstalling…</value>
  </data>
  <data name="SelectedPathNotValid" xml:space="preserve">
    <value>The selected path is not valid.</value>
  </data>
  <data name="SelectFolder" xml:space="preserve">
    <value>Select Folder</value>
  </data>
  <data name="SilentInstall" xml:space="preserve">
    <value>No UI during install</value>
  </data>
  <data name="Uninstall" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="Uninstalling" xml:space="preserve">
    <value>Uninstalling…</value>
  </data>
  <data name="ViewIsNoWindow" xml:space="preserve">
    <value>Opening the dialog failed. The dialog view is not a window.</value>
  </data>
  <data name="ViewModelNotSupported" xml:space="preserve">
    <value>This ViewModel is not supported. The operation could not be executed.</value>
  </data>
  <data name="InstallerNotFound" xml:space="preserve">
    <value>The installer file at {0} was not found.</value>
  </data>
  <data name="XInstallersFailed" xml:space="preserve">
    <value>{0} installers failed.</value>
  </data>
  <data name="DisableReboot" xml:space="preserve">
    <value>Disable reboot after installation</value>
  </data>
  <data name="ViewHasWrongTypeX" xml:space="preserve">
    <value>The view for ViewModel type {0} is of wrong type {1}. Requested type was {2}.</value>
  </data>
  <data name="EntityNotFound" xml:space="preserve">
    <value>The entity was not found.</value>
  </data>
  <data name="NameEmpty" xml:space="preserve">
    <value>The name should not be empty.</value>
  </data>
  <data name="PathEmpty" xml:space="preserve">
    <value>The path should not be empty.</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Hellip" xml:space="preserve">
    <value>…</value>
  </data>
  <data name="Dependencies" xml:space="preserve">
    <value>Dependencies</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="SwitchTheme" xml:space="preserve">
    <value>Switch theme</value>
  </data>
  <data name="OneHourAgo" xml:space="preserve">
    <value>1 hour ago</value>
  </data>
  <data name="OneMinuteAgo" xml:space="preserve">
    <value>1 minute ago</value>
  </data>
  <data name="OneSecondAgo" xml:space="preserve">
    <value>1 second ago</value>
  </data>
  <data name="XHoursAgo" xml:space="preserve">
    <value>{0} hours ago</value>
  </data>
  <data name="XMinutesAgo" xml:space="preserve">
    <value>{0} minutes ago</value>
  </data>
  <data name="XSecondsAgo" xml:space="preserve">
    <value>{0} seconds ago</value>
  </data>
  <data name="Yesterday" xml:space="preserve">
    <value>Yesterday</value>
  </data>
  <data name="KeepNewest" xml:space="preserve">
    <value>only keep newest</value>
  </data>
  <data name="NaN" xml:space="preserve">
    <value>Not a valid number.</value>
  </data>
  <data name="NumberShouldBeGreaterThanZero" xml:space="preserve">
    <value>The number has to be greater than 0.</value>
  </data>
  <data name="CustomArguments" xml:space="preserve">
    <value>Additional arguments</value>
  </data>
  <data name="Disk" xml:space="preserve">
    <value>File system</value>
  </data>
  <data name="PathDoesNotExist" xml:space="preserve">
    <value>The specified folder path does not exist.</value>
  </data>
  <data name="Repository" xml:space="preserve">
    <value>Repository</value>
  </data>
  <data name="RepositoryPathInvalid" xml:space="preserve">
    <value>The specified repository path is not valid (expected format "user/repository").</value>
  </data>
  <data name="RepositoryEmpty" xml:space="preserve">
    <value>The specified repository name is empty.</value>
  </data>
  <data name="RepositoryWatermark" xml:space="preserve">
    <value>The name of the GitHub repository in the "user/repository" format.</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="DialogInputNotValid" xml:space="preserve">
    <value>The entered information is not valid.</value>
  </data>
  <data name="NoProvider" xml:space="preserve">
    <value>No type selected.</value>
  </data>
  <data name="FilterDuplicateInstallers" xml:space="preserve">
    <value>Filter duplicate installers</value>
  </data>
  <data name="FilterDuplicateInstallersDetails" xml:space="preserve">
    <value>If multiple installers with the same application name should be filtered. Only the Install/Uninstall operation are affected, Custom is not.</value>
  </data>
  <data name="InstallationResults" xml:space="preserve">
    <value>Installation results</value>
  </data>
  <data name="OpenLogFolder" xml:space="preserve">
    <value>Open log file folder</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="InstallationCancelled" xml:space="preserve">
    <value>The installation was cancelled.</value>
  </data>
  <data name="InstallationDownloadFailed" xml:space="preserve">
    <value>The download failed.</value>
  </data>
  <data name="InstallationFailed" xml:space="preserve">
    <value>The installation failed.</value>
  </data>
  <data name="InstallationSkipped" xml:space="preserve">
    <value>The installation was skipped.</value>
  </data>
  <data name="InstallationSuccess" xml:space="preserve">
    <value>The installer was successfully executed.</value>
  </data>
  <data name="InstallerPathIsEmpty" xml:space="preserve">
    <value>The file path of the installer is empty. The operation could not be executed.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="CopyToClipboard" xml:space="preserve">
    <value>Copy to clipboard</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details:</value>
  </data>
  <data name="ErrorOccured" xml:space="preserve">
    <value>An error occured while performing the last operation.</value>
  </data>
  <data name="Cancelling" xml:space="preserve">
    <value>Cancelled, finishing current operation…</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="SelectOperationsToPerform" xml:space="preserve">
    <value>Please select the operations to perform:</value>
  </data>
  <data name="InstallDescription" xml:space="preserve">
    <value>The install operation will uninstall the application first, if it is already installed, and then proceed with the installation.</value>
  </data>
</root>