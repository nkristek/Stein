<controls:AdonisWindow x:Class="Stein.Views.DialogWindow"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                       xmlns:c="clr-namespace:NKristek.Wpf.Converters;assembly=NKristek.Wpf.Converters"
                       xmlns:localization="clr-namespace:Stein.Localization;assembly=Stein.Localization"
                       xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                       xmlns:controls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
                       xmlns:viewModels="clr-namespace:Stein.ViewModels;assembly=Stein.ViewModels"
                       xmlns:steinConverters="clr-namespace:Stein.Views.Converters"
                       mc:Ignorable="d" 
                       MinWidth="500"
                       MinHeight="350"
                       Width="500"
                       Height="350"
                       SizeToContent="Manual"
                       WindowStartupLocation="CenterScreen">

    <controls:AdonisWindow.TitleBarContent>
        <Grid Margin="{adonisUi:Space 1,0}"
              Visibility="{Binding ., Converter={steinConverters:TypeEqualsParameterToVisibilityConverter}, ConverterParameter={x:Type viewModels:MainWindowDialogModel}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="{adonisUi:Space 1}"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="{adonisUi:Space 1}"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="{adonisUi:Space 1}"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="{adonisUi:Space 1}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Add Folder button -->
            <Button Grid.Column="0"
                    VerticalAlignment="Center"
                    Height="{adonisUi:Space 3}"
                    Width="{adonisUi:Space 3}"
                    Padding="{adonisUi:Space 0.5}"
                    ContentTemplate="{StaticResource AddIconVariant}"
                    Style="{DynamicResource {x:Static adonisUi:Styles.WindowButton}}"
                    Command="{Binding AddApplicationCommand}"
                    ToolTip="{x:Static localization:Strings.Add}"/>

            <!-- Update dialog button -->
            <Grid Grid.Column="3"
                  Visibility="{Binding ElementName=UpdateButton, Path=IsEnabled, Converter={c:BoolToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{adonisUi:Space 1}"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <Button x:Name="UpdateButton"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Height="{adonisUi:Space 3}"
                        Width="{adonisUi:Space 3}"
                        Padding="{adonisUi:Space 0.5}"
                        ContentTemplate="{StaticResource UpdateIconVariant}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.WindowButton}}"
                        Command="{Binding ShowUpdateDialogCommand}"
                        ToolTip="{x:Static localization:Strings.UpdateAvailable}"/>
            </Grid>
            
            <!-- Refresh button -->
            <Button Grid.Column="5"
                    VerticalAlignment="Center"
                    Height="{adonisUi:Space 3}"
                    Width="{adonisUi:Space 3}"
                    Padding="{adonisUi:Space 0.5}"
                    Content="{Binding}"
                    Command="{Binding RefreshApplicationsCommand}"
                    Style="{DynamicResource {x:Static adonisUi:Styles.WindowButton}}"
                    ToolTip="{x:Static localization:Strings.Refresh}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <ContentControl Height="{adonisUi:Space 2}"
                                        Width="{adonisUi:Space 2}"
                                        SnapsToDevicePixels="True"
                                        UseLayoutRounding="True"
                                        Focusable="False"
                                        RenderTransformOrigin="0.5,0.5"
                                        ContentTemplate="{StaticResource RefreshIconVariant}">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}" 
                                        BasedOn="{StaticResource {x:Type ContentControl}}">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="0"/>
                                        </Setter.Value>
                                    </Setter>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsUpdating}" 
                                                     Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                    From="0"
                                                                    To="360"
                                                                    Duration="0:0:2"
                                                                    RepeatBehavior="Forever"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                    To="0"
                                                                    Duration="0:0:0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>

            <!-- Theme switch button -->
            <Button Grid.Column="7"
                    Height="{adonisUi:Space 3}"
                    Width="{adonisUi:Space 3}"
                    Padding="{adonisUi:Space 0.5}"
                    ContentTemplate="{StaticResource ThemeIconVariant}"
                    Style="{DynamicResource {x:Static adonisUi:Styles.WindowButton}}"
                    Command="{Binding ChangeThemeCommand}"
                    ToolTip="{x:Static localization:Strings.SwitchTheme}"/>

            <!-- Info dialog button -->
            <Button Grid.Column="9"
                    VerticalAlignment="Center"
                    Height="{adonisUi:Space 3}"
                    Width="{adonisUi:Space 3}"
                    Padding="{adonisUi:Space 0.5}"
                    ContentTemplate="{StaticResource InfoIconVariant}"
                    Style="{DynamicResource {x:Static adonisUi:Styles.WindowButton}}"
                    Command="{Binding ShowInfoDialogCommand}"
                    ToolTip="{x:Static localization:Strings.About}"/>
        </Grid>
    </controls:AdonisWindow.TitleBarContent>

    <ContentControl Content="{Binding ., ValidatesOnNotifyDataErrors=False}"
                    Focusable="False"/>
</controls:AdonisWindow>
