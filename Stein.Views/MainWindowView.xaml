<UserControl x:Class="Stein.Views.MainWindowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="clr-namespace:NKristek.Wpf.Converters;assembly=NKristek.Wpf.Converters"
             xmlns:localization="clr-namespace:Stein.Localizations;assembly=Stein.Localizations"
             xmlns:viewModels="clr-namespace:Stein.ViewModels;assembly=Stein.ViewModels"
             xmlns:steinconverters="clr-namespace:Stein.Views.Converters"
             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel, IsDesignTimeCreatable=True}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="60"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Application bar -->
        <Grid Grid.Row="0">
            <Border Background="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}">
                <Border.Effect>
                    <DropShadowEffect Direction="270"
                                      BlurRadius="28"
                                      ShadowDepth="7"
                                      Opacity="0.25"/>
                </Border.Effect>
            </Border>

            <Grid Grid.IsSharedSizeScope="True"
                  Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="ButtonColumn"/>
                    <ColumnDefinition Width="8"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="8"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="8"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Add Folder button -->
                <Button Grid.Column="0"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        Command="{Binding AddApplicationCommand}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <ContentControl ContentTemplate="{StaticResource AddIconVariant}"
                                                Height="20"
                                                Width="20"
                                                Margin="0, 0, 8, 0"/>

                                <TextBlock FontSize="14"
                                           Text="{x:Static localization:Strings.AddFolder}"/>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>

                <!-- Refresh button -->
                <Button Grid.Column="3"
                        Width="28"
                        Height="28"
                        Padding="2"
                        DataContext="{Binding RefreshApplicationsCommand}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        Command="{Binding}"
                        ToolTip="{x:Static localization:Strings.Refresh}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <ContentControl Width="16"
                                            Height="16"
                                            ContentTemplate="{StaticResource RefreshIconVariant}">
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}" 
                                           BasedOn="{StaticResource {x:Type ContentControl}}">
                                        <Setter Property="LayoutTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="0"/>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsWorking}" 
                                                         Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(LayoutTransform).(RotateTransform.Angle)"
                                                                     From="0"
                                                                     To="360"
                                                                     Duration="0:0:2"
                                                                     RepeatBehavior="Forever"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(LayoutTransform).(RotateTransform.Angle)"
                                                                     To="0"
                                                                     Duration="0:0:0" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>

                <!-- Theme switch button -->
                <Button Grid.Column="5"
                        Width="28"
                        Height="28"
                        Padding="4"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        Command="{Binding ChangeThemeCommand}"
                        ToolTip="{x:Static localization:Strings.SwitchTheme}">
                    <Button.ContentTemplate>
                        <MultiBinding Converter="{steinconverters:IntToNthValueConverter}">
                            <Binding Path="CurrentTheme"/>
                            <Binding Source="{StaticResource DarkThemeIconVariant}"/>
                            <Binding Source="{StaticResource LightThemeIconVariant}"/>
                        </MultiBinding>
                    </Button.ContentTemplate>
                </Button>

                <!-- Info dialog button -->
                <Button Grid.Column="7"
                        Width="28"
                        Height="28"
                        Padding="4"
                        ContentTemplate="{StaticResource InfoIconVariant}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        Command="{Binding ShowInfoDialogCommand}"
                        ToolTip="{x:Static localization:Strings.About}"/>
            </Grid>
        </Grid>

        <!-- Application content -->
        <ItemsControl Grid.Row="1" 
                      Margin="8"
                      ItemsSource="{Binding Applications}"
                      IsEnabled="{Binding CurrentInstallation, Converter={c:ValueNullToBoolConverter}}"
                      ScrollViewer.CanContentScroll="True"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.VirtualizationMode="Recycling"
                      VirtualizingStackPanel.ScrollUnit="Pixel">

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.Template>
                <ControlTemplate>
                    <ScrollViewer Padding="{TemplateBinding Control.Padding}" 
                                  Focusable="False">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
        </ItemsControl>

        <!-- Current installation -->
        <StatusBar Grid.Row="2"
                   HorizontalAlignment="Stretch"
                   Padding="8, 0">

            <!-- no installation -->
            <StatusBarItem Padding="0"
                           Margin="8"
                           Visibility="{Binding CurrentInstallation, Converter={c:ValueNullToVisibilityConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" 
                               FontSize="14"
                               Visibility="{Binding Visibility, ElementName=LoadingLabel, Converter={c:VisibilityToInverseVisibilityConverter}}"
                               Text="{x:Static localization:Strings.Ready}"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"/>

                    <TextBlock x:Name="LoadingLabel"
                               Grid.Column="0" 
                               FontSize="14"
                               Text="{x:Static localization:Strings.Loading}"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               DataContext="{Binding RefreshApplicationsCommand}"
                               Visibility="{Binding IsWorking, Converter={c:BoolToVisibilityConverter}, ConverterParameter=Hidden}"/>

                    <Grid Grid.Column="2" 
                          Visibility="{Binding InstallationResult, Converter={c:ValueNullToInverseVisibilityConverter}}">
                        <TextBlock DataContext="{Binding InstallationResult}"
                                   FontSize="14"
                                   Text="{Binding Result}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"/>
                    </Grid>
                </Grid>
            </StatusBarItem>

            <!-- during installation -->
            <StatusBarItem Padding="0"
                           Margin="8"
                           Visibility="{Binding CurrentInstallation, Converter={c:ValueNullToInverseVisibilityConverter}}">
                <Grid DataContext="{Binding CurrentInstallation}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               FontSize="14"
                               Text="{Binding ProgressString}"/>

                    <TextBlock Grid.Column="2"
                               FontSize="14" 
                               Text="{Binding State, Converter={steinconverters:InstallationStateToLocalizedStringConverter}}"/>

                    <TextBlock Grid.Column="4"
                               FontSize="14"
                               Text="{Binding Name}"/>
                </Grid>
            </StatusBarItem>

            <!-- Cancel button -->
            <StatusBarItem Padding="0"
                           HorizontalAlignment="Right">
                <Button Width="20"
                        Height="20"
                        Padding="4"
                        Style="{DynamicResource {x:Static adonisUi:Styles.ToolbarButton}}"
                        ContentTemplate="{DynamicResource DeleteIconVariant}"
                        Command="{Binding CancelOperationCommand}"
                        ToolTip="{x:Static localization:Strings.Cancel}"
                        ToolTipService.InitialShowDelay="0"
                        Visibility="{Binding CurrentInstallation, Converter={c:ValueNullToInverseVisibilityConverter}}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
