<UserControl x:Class="Stein.Views.MainWindowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="clr-namespace:NKristek.Wpf.Converters;assembly=NKristek.Wpf.Converters"
             xmlns:localization="clr-namespace:Stein.Localizations;assembly=Stein.Localizations"
             xmlns:viewModels="clr-namespace:Stein.ViewModels;assembly=Stein.ViewModels"
             xmlns:steinconverters="clr-namespace:Stein.Views.Converters"
             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel, IsDesignTimeCreatable=True}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="{adonisUi:Space 8}"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Application bar -->
        <Grid Grid.Row="0">
            <Border Background="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}">
                <Border.Effect>
                    <DropShadowEffect Direction="270"
                                      BlurRadius="32"
                                      ShadowDepth="8"
                                      Opacity="0.25"/>
                </Border.Effect>
            </Border>

            <Grid Grid.IsSharedSizeScope="True"
                  Margin="{adonisUi:Space 1}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="ButtonColumn"/>
                    <ColumnDefinition Width="{adonisUi:Space 1}"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="{adonisUi:Space 1}"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="{adonisUi:Space 1}"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Add Folder button -->
                <Button Grid.Column="0"
                        Height="{adonisUi:Space 5}"
                        Width="{adonisUi:Space 5}"
                        Padding="{adonisUi:Space 1}"
                        ContentTemplate="{StaticResource AddIconVariant}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        Command="{Binding Commands[Stein.ViewModels.Commands.MainWindowViewModelCommands.AddApplicationCommand]}"
                        ToolTip="{x:Static localization:Strings.Add}"/>

                <!-- Refresh button -->
                <Button Grid.Column="3"
                        Width="{adonisUi:Space 5}"
                        Height="{adonisUi:Space 5}"
                        Padding="{adonisUi:Space 1}"
                        Content="{Binding}"
                        Command="{Binding Commands[Stein.ViewModels.Commands.MainWindowViewModelCommands.RefreshApplicationsCommand]}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        ToolTip="{x:Static localization:Strings.Refresh}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <ContentControl Width="{adonisUi:Space 3}"
                                            Height="{adonisUi:Space 3}"
                                            SnapsToDevicePixels="True"
                                            UseLayoutRounding="True"
                                            RenderTransformOrigin="0.5,0.5"
                                            ContentTemplate="{StaticResource RefreshIconVariant}">
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}" 
                                           BasedOn="{StaticResource {x:Type ContentControl}}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="0"/>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsUpdating}" 
                                                         Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                     From="0"
                                                                     To="360"
                                                                     Duration="0:0:2"
                                                                     RepeatBehavior="Forever"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                     To="0"
                                                                     Duration="0:0:0" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>

                <!-- Theme switch button -->
                <Button Grid.Column="5"
                        Height="{adonisUi:Space 5}"
                        Width="{adonisUi:Space 5}"
                        Padding="{adonisUi:Space 1}"
                        Content="{Binding}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        Command="{Binding Commands[Stein.ViewModels.Commands.MainWindowViewModelCommands.ChangeThemeCommand]}"
                        ToolTip="{x:Static localization:Strings.SwitchTheme}">
                    <Button.ContentTemplate>
                        <MultiBinding Converter="{steinconverters:IntToNthValueConverter}">
                            <Binding Path="CurrentTheme"/>
                            <Binding Source="{StaticResource DarkThemeIconVariant}"/>
                            <Binding Source="{StaticResource LightThemeIconVariant}"/>
                        </MultiBinding>
                    </Button.ContentTemplate>
                </Button>

                <!-- Info dialog button -->
                <Button Grid.Column="7"
                        Width="{adonisUi:Space 5}"
                        Height="{adonisUi:Space 5}"
                        Padding="{adonisUi:Space 1}"
                        ContentTemplate="{StaticResource InfoIconVariant}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        Command="{Binding Commands[Stein.ViewModels.Commands.MainWindowViewModelCommands.ShowInfoDialogCommand]}"
                        ToolTip="{x:Static localization:Strings.About}"/>
            </Grid>
        </Grid>

        <!-- Application content -->
        <ItemsControl Grid.Row="1" 
                      Margin="{adonisUi:Space 1}"
                      ItemsSource="{Binding Applications}"
                      ScrollViewer.CanContentScroll="True"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.VirtualizationMode="Recycling"
                      VirtualizingStackPanel.ScrollUnit="Pixel">

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.Template>
                <ControlTemplate>
                    <ScrollViewer Padding="{TemplateBinding Control.Padding}" 
                                  Focusable="False">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
        </ItemsControl>

        <!-- Current installation -->
        <Grid Grid.Row="2">
            <ProgressBar HorizontalAlignment="Stretch"
                         HorizontalContentAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         VerticalContentAlignment="Stretch"
                         
                         Margin="{adonisUi:Space 0}"
                         Padding="{adonisUi:Space 0}"
                         DataContext="{Binding CurrentInstallation}"
                         Value="{Binding Progress, Mode=OneWay}"
                         Maximum="1"/>

            <StatusBar HorizontalAlignment="Stretch"
                   Background="Transparent"
                   Margin="{adonisUi:Space 0}"
                   Padding="{adonisUi:Space 0.5,0,0,0}">

                <!-- no installation -->
                <StatusBarItem Height="{adonisUi:Space 5}"
                           Padding="{adonisUi:Space 1}"
                           HorizontalAlignment="Stretch"
                           HorizontalContentAlignment="Stretch"
                           Visibility="{Binding CurrentInstallation, Converter={c:ValueNullToVisibilityConverter}}">
                    <Grid >
                        <TextBlock Text="{x:Static localization:Strings.Ready}"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontSize="14"
                               DataContext="{Binding Commands[Stein.ViewModels.Commands.MainWindowViewModelCommands.RefreshApplicationsCommand]}"
                               Visibility="{Binding IsWorking, Converter={c:BoolToInverseVisibilityConverter}}"/>

                        <TextBlock x:Name="LoadingLabel"
                               Text="{x:Static localization:Strings.Loading}"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               DataContext="{Binding Commands[Stein.ViewModels.Commands.MainWindowViewModelCommands.RefreshApplicationsCommand]}"
                               Visibility="{Binding IsWorking, Converter={c:BoolToVisibilityConverter}}"/>
                    </Grid>
                </StatusBarItem>

                <!-- during installation -->
                <StatusBarItem Height="{adonisUi:Space 5}"
                           Padding="{adonisUi:Space 1}"
                           HorizontalAlignment="Stretch"
                           HorizontalContentAlignment="Stretch"
                           Visibility="{Binding CurrentInstallation, Converter={c:ValueNullToInverseVisibilityConverter}}">
                    <Grid DataContext="{Binding CurrentInstallation}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="{adonisUi:Space 1}"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="{adonisUi:Space 1}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontWeight="Bold"
                               Text="{Binding Name}"/>

                        <Grid Grid.Column="2"
                          Visibility="{Binding IsInstalling, Converter={c:BoolToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="{adonisUi:Space 1}"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                   VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} / {1}">
                                        <Binding Path="CurrentInstallerIndex" />
                                        <Binding Path="TotalInstallerFileCount" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>

                        <TextBlock Grid.Column="3"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Text="{Binding CurrentOperation, Converter={steinconverters:InstallationOperationToLocalizedStringConverter}}"/>

                        <Button Grid.Column="6"
                            Width="{adonisUi:Space 3}"
                            Height="{adonisUi:Space 3}"
                            Padding="{adonisUi:Space 0.5}"
                            Style="{DynamicResource {x:Static adonisUi:Styles.ToolbarButton}}"
                            ContentTemplate="{DynamicResource DeleteIconVariant}"
                            Command="{Binding Commands[Stein.ViewModels.Commands.MainWindowViewModelCommands.CancelOperationCommand]}"
                            ToolTip="{x:Static localization:Strings.Cancel}"
                            ToolTipService.InitialShowDelay="0"/>
                    </Grid>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>
</UserControl>
